name: Run Interface Tests (Manual Setup)

on:
  push:
    branches:
      - main
      - cicd
  pull_request:

jobs:
  build-test:
    runs-on: ubuntu-latest

    steps:
      # Paso 1: Clonar el repositorio
      - name: Checkout repository
        uses: actions/checkout@v3

      # Paso 2: Configurar Java
      - name: Set up JDK
        uses: actions/setup-java@v3
        with:
          distribution: 'temurin'  # Usa 'temurin', 'zulu' o 'adopt' si lo prefieres
          java-version: '17'       # Ajusta según tu versión de Java

      # Paso 3: Configurar Node.js para el frontend
      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '16' # Cambia la versión de Node.js si es necesario

      # Paso 4: Instalar dependencias del frontend
      - name: Install frontend dependencies
        run: |
          cd frontend
          npm install

      # Paso 5: Instalar dependencias del backend
      - name: Install backend dependencies (if applicable)
        run: |
          cd backend
          mvn install

      # Paso 6: Iniciar el backend
      - name: Start backend
        run: |
          cd backend
          nohup java -jar target/backend.jar &

      # Paso 7: Iniciar el frontend
      - name: Start frontend
        run: |
          cd frontend
          nohup npm start &

      # Paso 8: Esperar a que los servicios estén listos
      - name: Wait for backend and frontend to be ready
        run: |
          while ! curl -s http://localhost:8443; do sleep 1; done
          while ! curl -s http://localhost:4200; do sleep 1; done

      # Paso 9: Configurar Maven (para ejecutar las pruebas)
      - name: Set up Maven
        uses: actions/setup-java@v3
        with:
          distribution: 'temurin'
          java-version: '17'

      # Paso 10: Ejecutar las pruebas de interfaz
      - name: Run interface tests
        run: mvn clean test -Dtest=LoginUiTests.java

      # Paso 11: Detener los servicios (opcional)
      - name: Stop services
        run: |
          pkill -f backend.jar || true  # Detiene el backend
          pkill -f npm || true           # Detiene el frontend