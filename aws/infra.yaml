AWSTemplateFormatVersion: "2010-09-09"
Description: "Recreate RDS MySQL instance 'snapstudy' with manual input for subnets and other config."

Parameters:
  Subnet1:
    Type: AWS::EC2::Subnet::Id
    Description: "First subnet ID for the RDS subnet group"

  Subnet2:
    Type: AWS::EC2::Subnet::Id
    Description: "Second subnet ID for the RDS subnet group"
  
  Subnet3:
    Type: AWS::EC2::Subnet::Id
    Description: "Second subnet ID for the RDS subnet group"

  VpcSecurityGroupId:
    Type: AWS::EC2::SecurityGroup::Id
    Description: "Security Group to associate with the RDS instance"

  AvailabilityZone:
    Type: String
    Default: eu-west-1b

  TargetSecurityGroupId:
    Description: "Security Group ID"
    Type: AWS::EC2::SecurityGroup::Id

Resources:
  DefaultDBSubnetGroup:
    Type: "AWS::RDS::DBSubnetGroup"
    Properties:
      DBSubnetGroupDescription: "Default subnet group for snapstudy"
      SubnetIds:
        - !Ref Subnet1
        - !Ref Subnet2
        - !Ref Subnet3

  SnapstudyDBInstance:
    Type: "AWS::RDS::DBInstance"
    Properties:
      DBInstanceIdentifier: "snapstudy"
      DBInstanceClass: "db.t4g.micro"
      Engine: "mysql"
      EngineVersion: "8.0.40"
      MasterUsername: "admin"
      MasterUserPassword: "snapstudy"
      AllocatedStorage: "20"
      MaxAllocatedStorage: 22
      StorageType: "gp2"
      StorageEncrypted: false
      PubliclyAccessible: true
      BackupRetentionPeriod: 1
      MultiAZ: false
      AvailabilityZone: !Ref AvailabilityZone
      EnableIAMDatabaseAuthentication: false
      DeletionProtection: false
      EnablePerformanceInsights: false
      MonitoringInterval: 0
      DBSubnetGroupName: !Ref DefaultDBSubnetGroup
      OptionGroupName: "default:mysql-8-0"
      DBParameterGroupName: "default.mysql8.0"
      CACertificateIdentifier: "rds-ca-rsa2048-g1"
      VPCSecurityGroups:
        - !Ref VpcSecurityGroupId

  SQSQueue:
    Type: AWS::SQS::Queue
    Properties:
      QueueName: snapstudy-text-process-sqs
      VisibilityTimeout: 240

  SQSQueuePolicy:
    Type: AWS::SQS::QueuePolicy
    Properties:
      Queues:
        - !Ref SQSQueue
      PolicyDocument:
        Statement:
          - Effect: Allow
            Principal: "*"
            Action:
              - sqs:SendMessage
              - sqs:GetQueueAttributes
              - sqs:DeleteMessage
              - sqs:GetQueueUrl
              - sqs:PurgeQueue
              - sqs:ChangeMessageVisibility
            Resource: !GetAtt SQSQueue.Arn
            Condition:
              ArnEquals:
                aws:SourceArn: arn:aws:s3:::snapstudy-s3

  LambdaExecutionRole:
    Type: AWS::IAM::Role
    Properties:
      RoleName: snapstudy-lambda-execution-role
      AssumeRolePolicyDocument:
        Version: '2012-10-17'
        Statement:
          - Effect: Allow
            Principal:
              Service: lambda.amazonaws.com
            Action: sts:AssumeRole
      Policies:
        - PolicyName: LambdaPolicy
          PolicyDocument:
            Version: '2012-10-17'
            Statement:
              - Effect: Allow
                Action:
                  - sqs:ReceiveMessage
                  - sqs:DeleteMessage
                  - sqs:GetQueueAttributes
                  - sqs:GetQueueUrl
                Resource: !Sub arn:aws:sqs:${AWS::Region}:${AWS::AccountId}:snapstudy-text-process-sqs
              - Effect: Allow
                Action:
                  - logs:CreateLogGroup
                  - logs:CreateLogStream
                  - logs:PutLogEvents
                Resource: "*"
              - Effect: Allow
                Action:
                  - s3:ListBucket
                  - s3:GetObject
                Resource: 
                  - arn:aws:s3:::snapstudy-s3
                  - arn:aws:s3:::snapstudy-s3/*
              - Effect: Allow
                Action:
                  - es:ESHttpPost
                  - es:ESHttpPut
                  - es:ESHttpGet
                Resource: !Sub arn:aws:es:${AWS::Region}:${AWS::AccountId}:domain/snapstudy-opensearch

  LambdaFunction:
    Type: AWS::Lambda::Function
    Properties:
      FunctionName: snapstudy-text-process-lambda
      Runtime: python3.9
      Handler: lambda_code.lambda_handler
      Role: !GetAtt LambdaExecutionRole.Arn
      Code:
        S3Bucket: snapstudy-artifacts
        S3Key: lambda_code.zip
      Timeout: 240
      MemorySize: 128

  EventSourceMapping:
    Type: AWS::Lambda::EventSourceMapping
    Properties:
      BatchSize: 10
      EventSourceArn: !Sub arn:aws:sqs:${AWS::Region}:${AWS::AccountId}:snapstudy-text-process-sqs
      FunctionName: !GetAtt LambdaFunction.Arn
      Enabled: true

Outputs:
  DBInstanceEndpoint:
    Description: "Endpoint of the RDS DB instance"
    Value: !GetAtt SnapstudyDBInstance.Endpoint.Address
  LambdaFunctionArn:
    Description: ARN de la funci√≥n Lambda
    Value: !GetAtt LambdaFunction.Arn
  QueueURL:
    Description: URL de la cola SQS creada
    Value: !Ref SQSQueue
  QueueARN:
    Description: ARN de la cola SQS creada
    Value: !GetAtt SQSQueue.Arn