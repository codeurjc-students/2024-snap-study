service: sync-lambda-serverless

plugins:
  - serverless-prune-plugin

custom:
  projectName: sync-lambda
  iamRoleStatements:
  - Effect: Allow
    Action:
      - kms:Encrypt
      - kms:Decrypt
      - kms:GenerateDataKey
      - kms:ReEncrypt*
      - kms:DescribeKey
    Resource:
      - "arn:aws:kms:${aws:region}:${aws:accountId}:key/*"
      - "${cf:serverless-resources.EncryptionKeyArn}"

  - Effect: Allow
    Action:
      - dynamodb:BatchGetItem
      - dynamodb:BatchWriteItem
      - dynamodb:PutItem
      - dynamodb:DescribeTable
      - dynamodb:GetItem
      - dynamodb:Scan
      - dynamodb:Query
      - dynamodb:UpdateItem
    Resource:
      - "arn:aws:dynamodb:eu-west-1:${aws:accountId}:table/obdl-${env:ENVIRONMENT}-${env:COUNTRY}-sync-lambda-locking-dynamo-table"

  - Effect: Allow
    Action:
      - "s3:GetObject"
      - "s3:PutObject"
      - "s3:ListBucket"
    Resource:
      - "arn:aws:s3:::${env:BUCKETNAMELANDING}-obdl-${env:ENVIRONMENT}-${env:COUNTRY}-notoken-landing-bucket"
      - "arn:aws:s3:::${env:BUCKETNAMELANDING}-obdl-${env:ENVIRONMENT}-${env:COUNTRY}-notoken-landing-bucket/*"
      - "arn:aws:s3:::${env:BUCKETNAMESYNC}-obdl-${env:ENVIRONMENT}-${env:COUNTRY}-sync-bucket"
      - "arn:aws:s3:::${env:BUCKETNAMESYNC}-obdl-${env:ENVIRONMENT}-${env:COUNTRY}-sync-bucket/*"

  - Effect: Allow
    Action:
      - secretsmanager:DescribeSecret
      - secretsmanager:GetSecretValue
    Resource:
      - "arn:aws:secretsmanager:${aws:region}:${aws:accountId}:secret:*"

  iamManagedPolicies:
    - 


provider:
  name: aws
  runtime: python3.10
  timeout: 300
  memorySize: 3072
  logRetentionInDays: ${ssm:/config/serverless/logRetentionInDays, 30}
  iam:
    role:
      name: ${self:service}-${env:ENVIRONMENT}-${env:COUNTRY}-lambdaRole
      statements: ${self:custom.iamRoleStatements}
      managedPolicies: ${self:custom.iamManagedPolicies}
  deploymentBucket:
  name: "${cf:serverless-resources.bucketName}"
  blockPublicAccess: true
  serverSideEncryption: aws:kms
  sseKMSKeyId: "${cf:serverless-resources.EncryptionKeyArn}"
  maxPreviousDeploymentArtifacts: 1

package:
  individually: true
  patterns:
    - '!./'
    - src/config/**
    - src/vendor/**

functions:
  sync-lambda:
    name: sync-lambda-${env:ENVIRONMENT}
    handler: src/main/python/lambda_function.lambda_handler
    package:
      patterns:
        - src/**
    events:
      - eventBridge:
          deadLetterQueueArn: arn:aws:sqs:${aws:region}:${aws:accountId}:${env:ENVIRONMENT}-commons-EBLocalDeadletter
          pattern:
            detail-type:
              - Object Created
            source:
              - aws.s3
            detail:
              bucket:
                name: "obdl-${env:ENVIRONMENT}-${env:COUNTRY}-sync-bucket"
              object:
                key:
                  - prefix: "${env:ENVIRONMENT}/in/"









#########################################################33


service: snapstudy-text-process-lambda

plugins:
  - serverless-prune-plugin

custom:
  projectName: snapstudy-text-process
  iamRoleStatements:
    - Effect: Allow
      Action:
        - "s3:GetObject"
        - "s3:ListBucket"
      Resource:
        - "arn:aws:s3:::snapstudy-s3"
        - "arn:aws:s3:::snapstudy-s3/*"
    - Effect: Allow
      Action:
        - sqs:SendMessage
        - sqs:ReceiveMessage
        - sqs:DeleteMessage
        - sqs:GetQueueAttributes
      Resource:
        - "arn:aws:sqs:::snapstudy-text-process-sqs"

provider:
  name: aws
  runtime: python3.10
  timeout: 300
  memorySize: 3072
  logRetentionInDays: 30
  iam:
    role:
      name: snapstudy-text-process-lambda-role
      statements: ${self:custom.iamRoleStatements}
  deploymentBucket:
    name: snapstudy-artifacts
    blockPublicAccess: true
    serverSideEncryption: AES256
  maxPreviousDeploymentArtifacts: 1

resources:
  Resources:
    SnapstudySQSQueue:
      Type: AWS::SQS::Queue
      Properties:
        QueueName: snapstudy-text-process-sqs

package:
  individually: true
  artifact: s3://snapstudy-artifacts/lambda_code.zip

functions:
  snapstudy-text-process-lambda:
    name: snapstudy-text-process-lambda
    handler: lambda_function.lambda_handler
    package:
      patterns:
        - "!./"
    events:
      - sqs:
          arn:
            Fn::GetAtt:
              - SnapstudySQSQueue
              - Arn
          batchSize: 5